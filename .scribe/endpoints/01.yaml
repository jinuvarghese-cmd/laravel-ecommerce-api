name: Products
description: ''
endpoints:
  -
    httpMethods:
      - GET
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'List all products'
      description: 'Returns a list of all available products with basic details.'
      authenticated: false
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "data": [
              {
                "id": 1,
                "name": "Test Product",
                "price": "2.00",
                "description": "A test product",
                "stock": 6
              },
              {
                "id": 7,
                "name": "Test Product 2",
                "price": "3.00",
                "description": "A test product",
                "stock": 12
              }
            ]
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - POST
    uri: api/products
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Add a new product (admin only)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters: []
    cleanUrlParameters: []
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the product.'
        required: true
        example: Laptop
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Description of the product.'
        required: false
        example: 'Fast gaming laptop'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      price:
        name: price
        description: 'Price of the product.'
        required: true
        example: 999.99
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stock:
        name: stock
        description: 'Stock quantity.'
        required: true
        example: 10
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: Laptop
      description: 'Fast gaming laptop'
      price: 999.99
      stock: 10
    fileParameters: []
    responses:
      -
        status: 201
        content: |-
          {
               "data": {
                   "id": 8,
                   "name": "Test Product 2",
                   "price": 99.99,
                   "description": "A test product",
                   "stock": 10
              }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - PUT
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Update a product (admin only)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters:
      name:
        name: name
        description: 'Name of the product.'
        required: true
        example: 'Laptop Pro'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      description:
        name: description
        description: 'Description of the product.'
        required: false
        example: 'Updated fast gaming laptop'
        type: string
        enumValues: []
        exampleWasSpecified: true
        nullable: true
        custom: []
      price:
        name: price
        description: 'Price of the product.'
        required: true
        example: 1299.99
        type: number
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
      stock:
        name: stock
        description: 'Stock quantity.'
        required: true
        example: 5
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanBodyParameters:
      name: 'Laptop Pro'
      description: 'Updated fast gaming laptop'
      price: 1299.99
      stock: 5
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
                "data": {
               "id": 7,
              "name": "Updated Product Name",
              "price": 50,
              "description": "A test product",
              "stock": 22
             }
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
  -
    httpMethods:
      - DELETE
    uri: 'api/products/{id}'
    metadata:
      groupName: Products
      groupDescription: ''
      subgroup: ''
      subgroupDescription: ''
      title: 'Delete a product (admin only)'
      description: ''
      authenticated: true
      custom: []
    headers:
      Content-Type: application/json
      Accept: application/json
    urlParameters:
      id:
        name: id
        description: 'The ID of the product.'
        required: true
        example: 1
        type: integer
        enumValues: []
        exampleWasSpecified: true
        nullable: false
        custom: []
    cleanUrlParameters:
      id: 1
    queryParameters: []
    cleanQueryParameters: []
    bodyParameters: []
    cleanBodyParameters: []
    fileParameters: []
    responses:
      -
        status: 200
        content: |-
          {
            "message": "Product deleted"
          }
        headers: []
        description: ''
        custom: []
    responseFields: []
    auth: []
    controller: null
    method: null
    route: null
    custom: []
